<?php

/**
 * @file
 * Contains asu_api.module.
 */

use Drupal\asu_api\Api\BackendApi\Request\GetApartmentStatusRequest;
use Drupal\asu_api\Api\BackendApi\Request\GetApartmentRevaluationsRequest;
use Symfony\Component\HttpFoundation\Response;
use Drupal\node\Entity\Node;

/**
 * Implements hook_cron().
 *
 * Update apartments state of sale sold status.
 */
function asu_api_cron() {
  $apartment_revaluation = NULL;

  try {
    /** @var \Drupal\asu_api\Api\BackendApi\BackendApi $api */
    $api = \Drupal::service('asu_api.backendapi');
    $request = new GetApartmentRevaluationsRequest();
    /** @var \Drupal\asu_api\Api\BackendApi\Response\GetApartmentRevaluationsResponse $response */
    $response = $api->send($request);
    $apartment_revaluation = $response->getContent();

    if (empty($apartment_revaluation)) {
      return;
    }
  }
  catch (\Exception $e) {
    return new Response('problem with request.', 400);
  }

  if ($apartment_revaluation) {
    foreach($apartment_revaluation as $revaluation) {
      // Get all aparments which state is not sold.
      $query = \Drupal::entityTypeManager()->getStorage('node')->getQuery();
      $query->condition('type', 'apartment')
        ->condition('uuid', $revaluation['apartment_uuid'], '=');
      $apartment = $query->execute();

      if ($apartment) {
        $node = Node::load(reset($apartment));
        $node->set('field_index_adjusted_right_of_oc', $revaluation['adjusted_right_of_occupancy_payment']);
        $node->set('field_alteration_work', $revaluation['alteration_work_total']);
        // Save node.
        $node->save();
      }
    }
  }
}
