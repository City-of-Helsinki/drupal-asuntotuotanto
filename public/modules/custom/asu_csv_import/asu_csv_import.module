<?php

/**
 * @file
 * Csv import.
 */

use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\Response;

/**
 * Implements hook hook_form_alter().
 *
 * Add download button to forms with field of type "asu_csv_import".
 * Add submit handler for the csv file.
 */
function asu_csv_import_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_object = $form_state->getFormObject();

  if (!$form_object) {
    return;
  }

  foreach ($form_object->getEntity()->getFields() as $field) {
    $type = $field->getFieldDefinition()->getType();

    if ($type == 'asu_csv_import') {
      $form["field_import_apartments"]["widget"][0]['download_hitas_template'] = [
        '#type' => 'submit',
        '#name' => 'hitas',
        '#value' => t('Download Hitas CSV template') . ' ',
        '#limit_validation_errors' => [],
        '#submit' => ['asu_csv_import_csv_import_download_template'],
        '#button_type' => 'primary',
      ];

      $form["field_import_apartments"]["widget"][0]['download_haso_template'] = [
        '#type' => 'submit',
        '#name' => 'haso',
        '#value' => t('Download HASO CSV template'),
        '#limit_validation_errors' => [],
        '#submit' => ['asu_csv_import_csv_import_download_template'],
        '#button_type' => 'primary',
      ];
      $form['actions']['submit']['#submit'][] = 'asu_csv_import_process';

      break;
    }
  }
}

/**
 * Form submission callback function for download button.
 */
function asu_csv_import_csv_import_download_template(&$form, FormStateInterface $form_state) {
  $trigger = $form_state->getTriggeringElement()['#name'];
  $configName = 'asu_csv_import.haso_apartment_fields';
  if ($trigger == 'hitas') {
    $configName = 'asu_csv_import.hitas_apartment_fields';
  }

  $node = $form_state->getFormObject()->getEntity();
  $upload_file_handler = \Drupal::service('asu_csv_import.upload_file_handler');

  $fields_order = Drupal::config($configName)->get('apartment_fields');
  $rows = $upload_file_handler->createCsvTemplateRows($node, $fields_order);
  try {
    $csv = $upload_file_handler->createCsvOutput(array_merge([$fields_order], $rows));
    $response = new Response($csv);
    $response->headers->set('Content-type', 'text/csv');
    $response->headers->set('Content-Disposition', 'attachment; filename=apartments.csv');
    $form_state->setRebuild();
    $form_state->setResponse($response);
  }
  catch (\Exception $e) {
    $form_state->setRebuild();
  }
}

/**
 * Submit handler used in node form alter.
 *
 * Handles the actual data import after the node has been saved.
 */
function asu_csv_import_process($form, FormStateInterface &$form_state) {
  $form_object = $form_state->getFormObject();
  $fields = $form_object->getEntity()->getFields();
  $upload_file_handler = \Drupal::service('asu_csv_import.upload_file_handler');

  /** @var \Drupal\file\Entity\File $file */
  if (!$file = $upload_file_handler->getUploadedFile($fields)) {
    return;
  }

  if (!$form_state->getValue('field_housing_company')[0]['value']) {
    \Drupal::messenger()->addError(t('Cannot perform csv-import if project housing company -field value is not set.'));
    $file->delete();
    $form_state->unsetValue('field_import_apartments');
    $form_object->getEntity()->save();
    return;
  }

  $langcode = $form_object->getEntity()->langcode->value;
  $project_apartments_field = $fields['field_apartments'];
  $project_status = $form_object->getEntity()->isPublished();

  try {
    $nodes = $upload_file_handler->createNodes($file, $langcode, $project_status);
  }
  catch (\Exception $e) {
    \Drupal::messenger()->addError("Error while creating apartments: " . $e->getMessage());
  }

  $street_address = $form_state->getUserInput()['field_street_address'][0]['value'] ?? '';

  foreach ($nodes['create'] as $node) {
    $apartment_number = $node->field_apartment_number->value ?? '';
    $address = "{$street_address} {$apartment_number}";
    $address = empty(trim($address)) ? $apartment_number : trim($address);

    $node->set('title', $address);
    $node->save();
    $project_apartments_field->appendItem($node->id());
  }

  foreach ($nodes['update'] as $node) {
    $node->save();
  }

  $file->delete();
  $form_state->unsetValue('field_import_apartments');

  $form_object->getEntity()->save();

  \Drupal::messenger()->addMessage("Added apartments to project from csv");
}
